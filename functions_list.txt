Q:
1. Implement CancelablePromise ?
2. Support for test nets ?
3. XPUB always generated for ETH net ?  But what about other chains ??
4. How to proxify WSS requests ?
6. Propagate error from API to SDK (now they are replaced) - may use source mechanics - specify errors for every command
8. Teach SDK work without loaded coins (just by contract address) ?

    SDK functions

    Local
+ 3. Generate Mnemonic
+ 4. Get XPUB from mnemonic
+ 5. Generate Wallet from mnemonic (online/offline)
+/- 6. Generate Address from xpub (with index) (supported not for all networks!)
+ 12. Get address from pkey
+ 17. Prepare transaction (only in SDK?) (or API ?)
- 17.1. Serialize transaction
+ 18. Sign transaction (only in SDK?) (or API ?)
+ 20. Add descriptions to public functions (!)
+ 22. Function to create aptos account
+ 23. Implement RPC-calls pass-through
+ 21. Check balance function
+ 22. Added generateAllWallets
+ 23. Add MongoDB users store
+ 25. Add Wallet connect support
+ 25.1. Add functions descriptions
+ 26. Create more use examples (split up one file)
+ 27. Add function to check Address validity (and/or detect address blockchain platform)

4.1. Get XPUB different for each network !
17.2. Implement Solana SPL transaction prepare
22. Implement Rain, Multi-send

    API calls
+ 1. Get Supported Networks: GET /info/networks (API-call)
+ 1.1. Get Supported Tokens: GET /info/tokens/{network} (API-call)
+ 7. Get Balance (API-call)
+ 8. Get Token balance (API-call)
+ 9. Get all tokens (API-call)
+ 11. Get last block (API-call)
+ 13. Get block by hash/number (API-call)
+ 10. Get transaction by hash (API-call)
+ 14. Get count of outgoing transactions (nonce) ? (API-call)
+ 16. Send Transaction (API-call)
+ 21. Broadcast signed transaction (API-call)
+ 22. Enable nodes and tokens caching
+ 23. Enable initializing only specific nodes

    KMS !
+ 1. Local storage to start with
+ 2. Encrypted local JSON file

    DB
+ 1. Mongo
+ 2. Can work with 1 or 2 connects (different servers)
+ 3. Can have default or user-provided DB names
+ 4. Save / get / update / search (by ID or param) - users
+ 5. Get key / mnemonic for user / chain
+ 6. Don't connect if not used
+ 9. Сохранение/получение фаворитов чейнов по каждому юзеру
+ 10. Сохранение/получение активных токенов по каждому юзеру
7. Tweet / retweet ?
8. Сохранить в бд балансы / Функция для чтения балансов

    WC (1 & 2)
+ 0. Auto-create folder
+ 1. New connect - receive wc-string/userID - return status ? info ?
+ 2. Get current connects - by userID - return wcIDs + info ?
+ 3. Disconnect - by wcID
+ 4. Change network - by wcID
+ 5. Events pass-through
+ 6. Confirm Event (eventID)
+ 7. Reject Event (eventID)
+ 8. Add more responses on request approve

    Test broadcasting
+ 1. APTOS - fully work
+ 2. Binance (BNB) - fully work
+ 3. Bitcoin (btc, ltc, doge) - fully work
+ 4. EVM - fully work
+ 5. Polka (building works) - fully work
+ 6. Radix - fully work
+/- 7. Solana - fully work ( only for SOL )
+ 8. Terra - fully work
+ 9. Tron - fully work